{"task": "@This place tastes like many emotions. Excitement, anger, joy and... salty? Is salty a feeling?@\r\n\r\n— Neeko, The Curious Chameleon\r\n\r\nHailing from a long lost tribe of vastaya, Neeko can blend into any crowd by borrowing the appearances of others, even absorbing something of their emotional state to tell friend from foe in an instant. No one is ever sure where — or who — Neeko might be, but those who intend to do her harm will soon witness her true colors revealed, and feel the full power of her primordial spirit magic unleashed upon them.\r\n\r\n![](https://espresso.codeforces.com/a2a9511b924956201f05ebc6a2215bf48327acc0.png) Source: [https://bilibili.com/BV1ub421e7cd/](https://bilibili.com/BV1ub421e7cd/)\r\n\r\nNeeko has infiltrated a grid of characters with dimensions $n \\times m$, each cell in the grid is represented by a string of length $k$. She can mimic the other cells; however, Neeko\"s cell has at least one character different from the other cells while all the other cells are the same. Your task is to find Neeko.\r\n\r\n\ue7e5\r\n\r\n\ue608\r\n\r\n\ue6be\r\n**Input**\r\n\r\nThe first line of the input contains three integers $n, m, k ~(2 \\leq n, m \\leq 200, 1 \\leq k \\leq 10)$.\r\n\r\nThe next $n$ lines contain $m \\cdot k$ characters each, consisting of visible ASCII characters from !(33) to  (126). The $((j - 1) \\cdot k + 1)$\\-th to the $(j \\cdot k)$\\-th character in the $i$\\-th line represents the cell $(i, j)$.\r\n\r\nIt\"s guaranteed that there is no extra space or line break, and the answer can be uniquely determined.\r\n\r\n\ue7e5\r\n\r\n\ue608\r\n\r\n\ue6be\r\n**Output**\r\n\r\nPrint two integers $r, c$, denoting the position of Neeko is in the $r$\\-th row and the $c$\\-th column.\r\n", "Approach": "@To solve this problem, we need to identify the unique cell in an \\( n \\times m \\) grid where each cell is represented by a string of length \\( k \\). All cells except one are identical, and the unique cell differs by at least one character. Our goal is to find the position of this unique cell.\n\n### Approach\n1. **Input Reading**: Read the grid of strings. Each cell is represented by a string of length \\( k \\).\n2. **Identify the Majority String**: Determine the string that appears most frequently in the grid. This will be the common string for all cells except the unique one.\n3. **Find the Unique Cell**: Iterate through the grid and compare each cell"s string to the majority string. The cell that does not match is the unique one.\n4. **Output the Position**: Once the unique cell is found, output its position in the grid.\n\n@, "为了解决这个问题，我们需要在一个 \\( n \\times m \\) 的网格中识别出唯一的单元格，其中每个单元格由一个长度为 \\( k \\) 的字符串表示。除了一个单元格外，所有其他单元格的字符串都是相同的，而唯一的单元格的字符串至少有一个字符与其他单元格不同。我们的目标是找到这个唯一单元格的位置。\n\n### 方法\n1. **输入读取**：读取由字符串组成的网格。每个单元格由一个长度为 \\( k \\) 的字符串表示。\n2. **确定多数字符串**：找出网格中出现频率最高的字符串。这个字符串将是除了唯一单元格之外所有单元格的公共字符串。\n3. **找到唯一单元格**：遍历网格，将每个单元格的字符串与多数字符串进行比较。不匹配的单元格就是唯一的单元格。\n4. **输出位置**：一旦找到唯一单元格，输出其在网格中的位置。"], "code": "\n\nn, m, k = map(int, input().split())\ngrid = []\nfor _ in range(n):\n    row = input().strip()\n    grid.append([row[j*k:(j+1)*k] for j in range(m)])\n\n# Find the majority string\nfrom collections import defaultdict\n\ncount = defaultdict(int)\nfor i in range(n):\n    for j in range(m):\n        count[grid[i][j]] += 1\n\nmajority = None\nmax_count = 0\nfor key, val in count.items():\n    if val > max_count:\n        max_count = val\n        majority = key\n\n# Find the unique cell\nfor i in range(n):\n    for j in range(m):\n        if grid[i][j] != majority:\n            print(i+1, j+1)\n            exit()\n\n\n"}
